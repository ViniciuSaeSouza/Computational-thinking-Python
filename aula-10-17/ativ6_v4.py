"""
RM 558832 - MARIA EDUARDA PAIXÃO
RM 558843 - LAURA DE OLIVEIRA CINTRA
RM 554456 - VINICIUS SAES DE SOUZA
"""

import os
import oracledb
import pandas as pd
from datetime import datetime


try:
    conn = oracledb.connect(user="RM554456", password="080995", dsn="oracle.fiap.com.br:1521/ORCL")
    inst_cadastro = conn.cursor()
    inst_consulta = conn.cursor()
except Exception as e:
    conexao = False
else:
    conexao = True
    ano_mes_dia = str(datetime.now().date())
    ano_mes_dia = ano_mes_dia.replace("-", "")
    hora = str(datetime.now().hour) + (str)(datetime.now().minute) + (str)(datetime.now().second)
    dia_hora = ano_mes_dia + hora
    

# Criação da tablea
# inst_cadastro.execute("DROP TABLE petshop")
# inst_cadastro.execute("CREATE TABLE petshop (id INTEGER GENERATED BY DEFAULT AS IDENTITY, tipo_pet VARCHAR(30), nome_pet VARCHAR(50), idade NUMBER)")


# FUNÇÕES E ROTINAS ----

def exibe_sub_menu_number():
    print("""
1 – Igual :
2 – Maior :
3 – Menor :
4 – Entre :
""")

                    
def filtra_number(op: int):
    ...

def exibe_sub_menu_string() -> None:
    print("""
1 - Começa com: Sa%
2 - Termina com: %m
3 - Tem no nome: %al%
""")

def filtra_string(op: int):
    print("")  



# -- ROTINA PRINCIPAL
    
os.system('cls')
while conexao:
    print("""
0 - Sair
1 - Cadastrar
2 - Filtrar colunas
3 - Filtrar registros (linhas)
""")
    # inst_consulta.execute("SELECT COLUMN_NAME FROM ALL_TAB_COLUMNS WHERE TABLE_NAME = 'PETSHOP'")
    # print(inst_consulta.fetchall())
    escolha = int(input("Escolha: "))
    
    match escolha:
        case 0:
            print("\nFinalizando...")
            conexao = False
        case 1:
            tipo = input("Tipo...: ")
            nome = input("Nome...: ")
            idade = int(input("Idade...: "))
            cadastro = f"""INSERT INTO petshop (tipo_pet, nome_pet, idade) VALUES ('{tipo}', '{nome}', '{idade}')"""
            
            inst_cadastro.execute(cadastro)
            conn.commit()
            print("Dados gravados!")
        case 2:
            listar_dados = []
            inst_consulta.execute("SELECT * FROM petshop")
            data = inst_consulta.fetchall()
            
            for dt in data:
                listar_dados.append(dt)
            
            listar_dados = sorted(listar_dados)
            
            dados_df = pd.DataFrame.from_records(listar_dados, columns=['id', 'Tipo', 'Nome', 'Idade'], index='id')
            
            if dados_df.empty:
                os.system('cls')
                print("Não há pets cadastrados!")
            else:
                # lista os dados 
                print(dados_df)
                
                gerar_planilha = input("Gerar Planilha? [S]im ou [N]ão: ").lower()
                if gerar_planilha == "s":
                    nome_arquivo = "planilha" + dia_hora
                    dados_df.to_excel(nome_arquivo+".xlsx", index=False)
                    print('Dados')
                else:
                    print("Não queria exportar mesmo...")
        case 3: 
            colunas_exibir = []
            while True:
                os.system("cls")
                print("=== Escolha as Colunas ===")
                print("""
                1 - Id
                2 - Tipo de Pet
                3 - Nome
                4 - Idade
                5 - Data de Nascimento
                6 - Todas
                7 - Finalizar
                """)
                opcao = input("Escolha: ")
 
                if opcao == '7':
                    break
                if opcao == '6':  # Seleciona todas as colunas
                    colunas_exibir = ['Id', 'Tipo', 'Nome', 'Idade', 'Data de Nascimento']
                    print("Todas as colunas adicionadas.")
                    break
                match opcao:
                    case '1':
                        colunas_exibir.append('Id')
                        print("Coluna 'Id' adicionada.")
                    case '2':
                        colunas_exibir.append('Tipo')
                        print("Coluna 'Tipo' adicionada.")
                    case '3':
                        colunas_exibir.append('Nome')
                        print("Coluna 'Nome' adicionada.")
                    case '4':
                        colunas_exibir.append('Idade')
                        print("Coluna 'Idade' adicionada.")
                    case '5':
                        colunas_exibir.append('Data de Nascimento')
                        print("Coluna 'Data de Nascimento' adicionada.")
                    case _:
                        print(f"Opção '{opcao}' inválida. Tente novamente.")
                input("\nPressione enter para adicionar mais colunas... ")

                if colunas_exibir:
                    dados_filtrados = dados_df[colunas_exibir]
                    print("\n=== Registros Filtrados ===\n")
                    print(dados_filtrados)
                input("\nPressione enter para continuar")

        case 4:
            print("Escolha por qual coluna você quer filtrar:\n")
            print("""
            1 - Nome do pet (like)
            2 - Idade
            3 - Data de Nascimento 
            """)
            escolha = int(input("Escolha: "))
            
            match escolha:
                case 1:
                    exibe_sub_menu_string()
                    opcao = int("\nEscolha: ")
                    
                    if opcao > 3 or opcao < 1:
                        print("\nNão existe essa oção no menu!")
                    else:
                        filtra_string(opcao)
                case 2:
                    exibe_sub_menu_number()
                    opcao = int("\nEscolha: ")
                    if  0 > opcao > 4:
                        print("\nNão existe esta opção no menu!")
                    else:
                        filtra_number(opcao)

 